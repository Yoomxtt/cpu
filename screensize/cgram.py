CGLIKETXT = {
    'w1': [
        '[][][][][][][][]',
        '[][]    [][]    ',
        '[][]    [][]    ',
        '[][]    [][]    ',
        '[][]    [][]    ',
    ],
    'w2': [
        '[][]    [][]    ',
        '[][]    [][]    ',
        '[][]    [][]    ',
        '[][]    [][]    ',
        '[][][][][][][][]',
    ],
    't1': [
        '      [][][]    ',
        '    [][]  [][]  ',
        '  [][]    [][]  ',
        '[][]      [][]  ',
        '[]      [][]    ',
    ],
    't2': [
        '        [][][][]',
        '                ',
        '                ',
        '                ',
        '                ',
    ],
    't3': [
        '                ',
        '                ',
        '                ',
        '                ',
        '[][][][][][][][]',
    ],
    'f1': [
        '[][]            ',
        '  [][]          ',
        '  [][]          ',
        '  [][]          ',
        '  [][]          ',
    ],
    'f2': [
        '[][]            ',
        '[][]            ',
        '[]              ',
        '[]              ',
        '                ',
    ],
}

CGLIKEDTXT = {
    'w1': [
        '[][][][]    [][]',
        '[][][][]    [][]',
        '[][][][]    [][]',
        '[][][][]    [][]',
        '[][][][]    [][]',
    ],
    'w2': [
        '[][][][]    [][]',
        '[][][][]    [][]',
        '[][][][]    [][]',
        '[][][][]    [][]',
        '[][][][]    [][]',
    ],
    't1': [
        '      [][][]    ',
        '    [][][][][]  ',
        '  [][][][][][]  ',
        '[][][][][][][]  ',
        '[][][][][][]    ',
    ],
    't2': [
        '[][][][][][][][]',
        '[][][][][][][][]',
        '[][][][][][][][]',
        '[][][][][][][][]',
        '[][][][][][][][]',
    ],
    't3': [
        '[][][][][][][][]',
        '[][][][][][][][]',
        '[][][][][][][][]',
        '[][][][][][][][]',
        '[][][][][][][][]',
    ],
    'f1': [
        '[][]            ',
        '[][][]          ',
        '[][][]          ',
        '[][][]          ',
        '[][][]          ',
    ],
    'f2': [
        '[][]            ',
        '[][]            ',
        '[]              ',
        '[]              ',
        '                ',
    ],
}

def _rotate(glyph):
    data = []
    for y in reversed(range(0, 16, 2)):
        data.append(
            sum(
                2**j if v[y:y+2] == '[]' else 0
                for j, v in enumerate(reversed(glyph))
            )
        )
    return data


def _load(txt):
    '''rotate txt dict format into binary data and store opcode'''
    op = {}
    data = []
    for i, (cgtitle, cgvalue) in enumerate(txt.items()):
        op[cgtitle] = f'CG{i + 1}'
        data.extend([f'B{d:02d}' for d in _rotate(cgvalue)])
    return op, data


CGLIKE, CGLIKE_DATA = _load(CGLIKETXT)
CGLIKED, CGLIKED_DATA = _load(CGLIKEDTXT)
